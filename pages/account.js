import Head from "next/head";
import { useEffect, useState } from "react";
import { UserAuth } from "@/context/AuthContext";
import { db } from "../firebase/firebase";
import { doc, onSnapshot } from "firebase/firestore";
import Image from "next/image";
import Link from "next/link";
import CloseIcon from "@mui/icons-material/Close";
import FestivalIcon from "@mui/icons-material/Festival";
import TicketIcon from "@mui/icons-material/ConfirmationNumber";
import BookedConcertInfoModal from "@/components/Modal/BookedConcertInfoModal";
import uuid from "react-uuid";

function Account() {
    const [savedConcerts, setSavedConcerts] = useState([]);
    const [bookedConcerts, setBookedConcerts] = useState([]);
    const [username, setUsername] = useState([]);
    const [selectedConcert, setSelectedConcert] = useState(null);
    const [isOverlayOpen, setIsOverlayOpen] = useState(false);
    const { user } = UserAuth();

    useEffect(() => {
        function getUsername() {
            onSnapshot(doc(db, "users", `${user?.email}`), (doc) => {
                setUsername(doc.data()?.username);
            });
        }

        function getSavedConcertsData() {
            onSnapshot(doc(db, "users", `${user?.email}`), (doc) => {
                setSavedConcerts(doc.data()?.savedConcerts);
            });
        }

        function getBookedConcertsData() {
            onSnapshot(doc(db, "users", `${user?.email}`), (doc) => {
                setBookedConcerts(doc.data()?.bookedConcerts);
            });
        }

        if (isOverlayOpen) {
            document.body.style.overflow = "hidden";
        } else {
            document.body.style.overflow = "unset";
        }

        getUsername();
        getSavedConcertsData();
        getBookedConcertsData();
    }, [user?.email, isOverlayOpen]);

    function handleOpenModal(concert) {
        setSelectedConcert(concert);
        setIsOverlayOpen(true);
    }

    function handleCloseModal() {
        setSelectedConcert(null);
        setIsOverlayOpen(false);
    }

    return (
        <>
            <Head>
                <title>Movcert - Account</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="h-[550px] bg-cover custom-img" data-aos="fade">
                <div className="flex items-center justify-center">
                    <div className="absolute top-0 bottom-0 right-0 left-0 bg-gradient-to-b from-black h-[140px]" />
                    <div className="absolute h-[550px] top-0 bottom-0 right-0 left-0 bg-black/40 " />
                </div>
                <div className="z-10 mt-[320px]">
                    <h1 className="font-bold text-center text-[50px] text-white mt-[-85px]" data-aos="fade-up">
                        My Account
                    </h1>
                </div>
                <div className="flex justify-center items-center text-black">
                    <div className="z-10">
                        <div
                            className="block w-screen p-8 mt-[180px] border rounded-lg shadow-md bg-white z-10 abovesm:w-[550px] md:w-[800px]"
                            data-aos="fade-up"
                        >
                            <h1 className="text-center text-2xl">
                                Welcome back, <span className="font-bold">{username}</span>
                            </h1>
                        </div>
                    </div>
                </div>
            </div>
            <div className="p-4 mt-12">
                <h1 className="text-[30px]" data-aos="fade-up">
                    Saved Concerts
                </h1>
                <div className="mt-4 grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-6 gap-6">
                    {savedConcerts?.map((concert) => (
                        <div key={concert.id}>
                            <div className="scale-100 hover:scale-105 ease-in duration-100 cursor-pointer">
                                <Link href={"/concerts/" + concert.id}>
                                    <Image
                                        src={concert.concertCover}
                                        width={400}
                                        height={20}
                                        alt="broken-img"
                                        className="rounded h-auto max-w-full shadow-xl scale-100 hover:scale-105 ease-in duration-100"
                                        data-aos="fade-up"
                                    />
                                </Link>
                            </div>
                            <h1 className="text-center mt-2" data-aos="fade-up">
                                {concert.title}
                            </h1>
                        </div>
                    ))}
                </div>
            </div>

            <div className="p-4">
                <h1 className="text-[30px] font" data-aos="fade-up">
                    Booked Concerts
                </h1>
                <div className="mt-4 grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-6 gap-6">
                    {bookedConcerts?.map((concert) => (
                        <div key={concert.id}>
                            <div className="scale-100 hover:scale-105 ease-in duration-100 cursor-pointer">
                                <Image
                                    src={concert.concertCover}
                                    width={400}
                                    height={20}
                                    alt="broken-img"
                                    className="rounded h-auto max-w-full shadow-xl"
                                    data-aos="fade-up"
                                    onClick={() => handleOpenModal(concert)}
                                />
                            </div>
                            <h1 className="text-center mt-2" data-aos="fade-up">
                                {concert.title}
                            </h1>
                        </div>
                    ))}
                </div>
            </div>
            {selectedConcert && <BookedConcertInfoModal concert={selectedConcert} onGetOverlayData={handleCloseModal} />}
        </>
    );
}

export default Account;
